import { model } from '@peter-murray/hue-bridge-model';
import { v3Model } from './v3Model';
import { deprecatedFunction } from './util';
import * as api from './api';
import { description, nupnpSearch, upnpSearch } from './api/discovery';
// Definition of the v3 API for node-hue-api
const v3 = {
    api: api,
    discovery: {
        upnpSearch: (timeout) => {
            deprecatedFunction('6.x', `require('node-hue-api').v3.discovery.upnpSearch()`, `Use require('node-hue-api').discovery.upnpSearch()`);
            return upnpSearch(timeout);
        },
        nupnpSearch: () => {
            deprecatedFunction('6.x', `require('node-hue-api').v3.discovery.nupnpSearch()`, `Use require('node-hue-api').discovery.nupnpSearch()`);
            return nupnpSearch();
        },
        description: (ipAddress) => {
            deprecatedFunction('6.x', `require('node-hue-api').v3.discovery.description(ipAddress)`, `Use require('node-hue-api').discovery.description(ipAddress)`);
            return description(ipAddress);
        },
    },
    //TODO think about removing this and deferring to the model
    lightStates: model.lightStates,
    model: v3Model,
};
export { v3 };
// function sensorsObject(msg: string) {
//   return {
//     clip: {
//       GenericFlag: classRemoved(msg),
//       OpenClose: classRemoved(msg),
//       GenericStatus: classRemoved(msg),
//       Humidity: classRemoved(msg),
//       Lightlevel: classRemoved(msg),
//       Presence: classRemoved(msg),
//       Switch: classRemoved(msg),
//       Temperature: classRemoved(msg),
//     }
//   }
// }
//
// function rulesObject(msg) {
//   return {
//     Rule: classRemoved(msg),
//     conditions: {
//       group: functionRemoved(msg),
//       sensor: functionRemoved(msg),
//     },
//     actions: {
//       light: functionRemoved(msg),
//       group: functionRemoved(msg),
//       scene: functionRemoved(msg),
//     },
//   };
// }
// function functionRemoved(msg: string) {
//   return function () {
//     throw new ApiError(msg);
//   };
// }
//
// function classRemoved(msg: string) {
//   return class RemovedClass {
//     constructor() {
//       throw new ApiError(msg);
//     }
//   };
// }
